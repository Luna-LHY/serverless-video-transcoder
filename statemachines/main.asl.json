{
    "Comment": "main workflow for video transcode",
    "StartAt": "SplitVideo",
    "States": {
        "SplitVideo": {
            "Comment": "split video into small segements.",
            "Type": "Task",
            "Resource": "${SplitVideoFunctionArn}",
            "Next": "Parallel Video Groups"
        },
        "Parallel Video Groups": {
            "Comment": "Processing audio and video in parallel.",
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "VideoSegmentMapGroup0",
                    "States": {
                        "VideoSegmentMapGroup0": {
                            "Type": "Map",
                            "InputPath": "$.[0]",
                            "ItemsPath": "$.video_segments",
                            "Parameters": {
                                "download_dir.$": "$.download_dir",
                                "video_segments.$": "$$.Map.Item.Value"
                            },
                            "Iterator": {
                                "StartAt": "TranscodeVideoGroup0",
                                "States": {
                                    "TranscodeVideoGroup0": {
                                        "Type": "Task",
                                        "Resource": "${TranscodeVideoFunctionArn}",
                                        "End": true
                                    }
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "VideoSegmentMapGroup1",
                    "States": {
                        "VideoSegmentMapGroup1": {
                            "Type": "Map",
                            "InputPath": "$.[1]",
                            "ItemsPath": "$.video_segments",
                            "Parameters": {
                                "download_dir.$": "$.download_dir",
                                "video_segments.$": "$$.Map.Item.Value"
                            },
                            "Iterator": {
                                "StartAt": "TranscodeVideoGroup1",
                                "States": {
                                    "TranscodeVideoGroup1": {
                                        "Type": "Task",
                                        "Resource": "${TranscodeVideoFunctionArn}",
                                        "End": true
                                    }
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "VideoSegmentMapGroup2",
                    "States": {
                        "VideoSegmentMapGroup2": {
                            "Type": "Map",
                            "InputPath": "$.[2]",
                            "ItemsPath": "$.video_segments",
                            "Parameters": {
                                "download_dir.$": "$.download_dir",
                                "video_segments.$": "$$.Map.Item.Value"
                            },
                            "Iterator": {
                                "StartAt": "TranscodeVideoGroup2",
                                "States": {
                                    "TranscodeVideoGroup2": {
                                        "Type": "Task",
                                        "Resource": "${TranscodeVideoFunctionArn}",
                                        "End": true
                                    }
                                }
                            },
                            "End": true
                        }
                    }
                }
            ],
            "Next": "MergeVideo"
        },
        "MergeVideo": {
            "Type": "Task",
            "Resource": "${MergeVideoFunctionArn}",
            "Next": "Create HLS?"
        },            
        "Create HLS?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.create_hls",
                    "NumericEquals": 1,
                    "Next": "GenerateHLS"
                }
            ],
            "Default": "No"
        },
        "GenerateHLS": {
            "Type": "Task",
            "Resource": "${GenerateHLSFunctionArn}",
            "End": true
        },
        "No": {
            "Type": "Pass",
            "End": true
        }
    }
}