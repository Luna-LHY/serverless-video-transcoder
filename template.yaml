AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-video-transcoder

Metadata:
  AWS::ServerlessRepo::Application:
    Name: serverless-video-transcoder
    Description: Serverless Video Transcoder
    Author: Harold Sun
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['S3', 'Lambda', 'Step_Functions', 'Video', 'Transcode']
    HomePageUrl: https://github.com/bnusunny/serverless-video-transcoder
    SemanticVersion: 0.0.2
    SourceCodeUrl: https://github.com/bnusunny/serverless-video-transcoder


Parameters:

  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: Dev

  VideosBucketName:
    Type: String
    Description: "REQUIRED: Unique S3 bucket name to use for the app."

Globals:
  Function:
    Timeout: 30
    Runtime: python3.8
    MemorySize: 512
    Tracing: Active
    Layers:
      - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:12"

Resources:

  VideosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref VideosBucketName

  JobTable:
    Type: AWS::Serverless::SimpleTable

  FFmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/ffmpeg_layer
      CompatibleRuntimes:
        - python3.8

  TriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/trigger_statemachine_function/
      Handler: app.lambda_handler
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - DynamoDBWritePolicy:
            TableName: !Ref JobTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt MainStateMachine.Name
        - CloudWatchLambdaInsightsExecutionRolePolicy
      Environment:
        Variables:
          JOB_TABLE: !Ref JobTable
          SFN_ARN: !Ref MainStateMachine
          DEFAULT_SEGMENT_TIME: 60
          ENABLE_HLS: 0
      Layers:
        - !Ref FFmpegLayer
      Events:
        S3NewObjectEvent:
          Type: S3
          Properties:
            Bucket: !Ref VideosBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".mp4"
                  - Name: prefix
                    Value: "input/"

  MainStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachines/main.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        ControllerFunctionArn: !GetAtt ControllerFunction.Arn
        TranscodeVideoFunctionArn: !GetAtt TranscodeVideoFunction.Arn
        MergeVideoFunctionArn: !GetAtt MergeVideoFunction.Arn
      Policies:
        - CloudWatchPutMetricPolicy: {}
        - CloudWatchLogsFullAccess
        - LambdaInvokePolicy:
            FunctionName: !Ref ControllerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref TranscodeVideoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MergeVideoFunction
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - AWSXRayDaemonWriteAccess

  ControllerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/controller_function/
      Handler: app.lambda_handler
      MemorySize: 10240
      Timeout: 900
      Environment:
        Variables:
          PARALLEL_GROUPS: 3
          DEFAULT_CONCURENCY: 30
          DEFAULT_SEGMENT_TIME: 30
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - CloudWatchLambdaInsightsExecutionRolePolicy

  TranscodeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/transcode_video_function/
      Handler: app.lambda_handler
      MemorySize: 10240
      Timeout: 900
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - CloudWatchLambdaInsightsExecutionRolePolicy

  MergeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/merge_video_function/
      Handler: app.lambda_handler
      MemorySize: 10240
      Timeout: 900
      Environment:
        Variables:
          MEDIA_BUCKET: !Ref VideosBucketName
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - CloudWatchLambdaInsightsExecutionRolePolicy

Outputs:

  VideosBucketName:
    Description: S3 Video bucket name
    Value: !Ref VideosBucketName
