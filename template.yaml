AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-video-transcoding

Parameters:
  VideosBucketName:
    Type: String
    Description: "REQUIRED: Unique S3 bucket name to use for the app."
  EFSpath:
    Type: String
    Default: /mnt/efs
  SecurityGroupIds:
    Type: CommaDelimitedList
    Default: sg-c3677dbf
  SubnetIDs:
    Type: CommaDelimitedList
    Description: The list of SubnetIDs in your Virtual Private Cloud (VPC)
    Default: subnet-1c8b6354,subnet-b80953e3
  AccessPointID:
    Type: String
    Description: Access point ID
    Default: fsap-0d0c225da207e39e8
  FileSystemID:
    Type: String
    Description: EFS File System ID
    Default: fs-c125e35c

Globals:
  Function:
    Timeout: 30
    Runtime: python3.8
    MemorySize: 512

Resources:
  VideosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref VideosBucketName

  JobTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: transcode_jobs

  FFmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/ffmpeg_layer
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: makefile

  TriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/trigger_statemachine_function/
      Handler: app.lambda_handler
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - DynamoDBWritePolicy:
            TableName: !Ref JobTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt MainStateMachine.Name
      Environment:
        Variables:
          JOB_TABLE: !Ref JobTable
          SFN_ARN: !Ref MainStateMachine
          ENABLE_HLS: 0
      Layers:
        - !Ref FFmpegLayer
      Events:
        S3NewObjectEvent:
          Type: S3
          Properties:
            Bucket: !Ref VideosBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".mp4"
                  - Name: prefix
                    Value: "input/"

  MainStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachines/main.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SplitVideoFunctionArn: !GetAtt SplitVideoFunction.Arn
        TranscodeAudioFunctionArn: !GetAtt TranscodeAudioFunction.Arn
        TranscodeVideoFunctionArn: !GetAtt TranscodeVideoFunction.Arn
        MergeVideoFunctionArn: !GetAtt MergeVideoFunction.Arn
        MergeMediaFunctionArn: !GetAtt MergeMediaFunction.Arn
        GenerateHLSFunctionArn: !GetAtt GenerateHLSFunction.Arn
      Policies:
        - CloudWatchPutMetricPolicy: {}
        - CloudWatchLogsFullAccess
        - LambdaInvokePolicy:
            FunctionName: !Ref SplitVideoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref TranscodeAudioFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref TranscodeVideoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MergeVideoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MergeMediaFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateHLSFunction

  SplitVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/split_video_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
          PARALLEL_GROUPS: 3
          SEGMENT_TIME: 40
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath

  TranscodeAudioFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/transcode_audio_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath

  TranscodeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/transcode_video_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath

  MergeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/merge_video_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
          MEDIA_BUCKET: !Ref VideosBucketName
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath

  MergeMediaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/merge_media_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
          MEDIA_BUCKET: !Ref VideosBucketName
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath

  GenerateHLSFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/generate_hls_function/
      Handler: app.lambda_handler
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
      Layers:
        - !Ref FFmpegLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref VideosBucketName
        - S3WritePolicy:
            BucketName: !Ref VideosBucketName
        - EFSWriteAccessPolicy:
            FileSystem: !Ref FileSystemID
            AccessPoint: !Ref AccessPointID
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Sub "arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:access-point/${AccessPointID}"
          LocalMountPath: !Ref EFSpath
